admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: '0.0.0.0'
      port_value: 9901
  profile_path: /tmp/envoy.prof

static_resources:
  listeners:
    - name: listener_0
      address:
        socket_address:
          address: '0.0.0.0'
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: chat_service
                      domains: ['*']
                      routes:
                        - match:
                            path: '/health'
                          direct_response:
                            status: 200
                            body:
                              inline_string: 'OK'
                        - match:
                            prefix: '/chat'
                          route:
                            cluster: chat_cluster
                            regex_rewrite:
                              pattern:
                                regex: '^/chat(/.*)$'
                              substitution: '\1'
                            timeout: 30s
                            retry_policy:
                              retry_on: connect-failure,refused-stream,unavailable,cancelled,resource-exhausted,5xx
                              num_retries: 3
                              retriable_status_codes: [503]
                        - match:
                            prefix: '/agent'
                          route:
                            cluster: agent_cluster
                            regex_rewrite:
                              pattern:
                                regex: '^/agent(/.*)$'
                              substitution: '\1'
                            timeout: 30s
                            retry_policy:
                              retry_on: connect-failure,refused-stream,unavailable,cancelled,resource-exhausted,5xx
                              num_retries: 3
                              retriable_status_codes: [503]
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        privy_jwt:
                          issuer: '${JWKS_ISSUER}'
                          audiences:
                            - '${JWKS_APP_ID}'
                          remote_jwks:
                            http_uri:
                              uri: '${JWKS_REMOTE_URL}'
                              cluster: jwks_cluster
                              timeout: 5s
                            cache_duration:
                              seconds: 3600 # Cache JWKS for 1 hour
                          from_headers:
                            - name: privy-token
                          forward: true
                          forward_payload_header: 'x-jwt-payload'

                      rules:
                        # Health check endpoints excluded from JWT verification
                        - match:
                            path: '/health'
                        - match:
                            path: '/chat/api/health'
                        # All other chat endpoints require JWT authentication
                        - match:
                            prefix: '/chat'
                          requires:
                            provider_name: privy_jwt
                  - name: envoy.filters.http.router
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      typed_json_format:
                        status_code: '%RESPONSE_CODE%'
                        path: '%REQ(:PATH)%'
                        method: '%REQ(:METHOD)%'
                        protocol: '%PROTOCOL%'
                        response_flags: '%RESPONSE_FLAGS%'
                        bytes_received: '%BYTES_RECEIVED%'
                        bytes_sent: '%BYTES_SENT%'
                        duration: '%DURATION%'
                        upstream_service_time: '%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%'
                        forwarded_for: '%REQ(X-FORWARDED-FOR)%'
                        user_agent: '%REQ(USER-AGENT)%'
                        request_id: '%REQ(X-REQUEST-ID)%'
                        authority: '%REQ(:AUTHORITY)%'
                        upstream_host: '%UPSTREAM_HOST%'
                stream_idle_timeout: 0s
                common_http_protocol_options:
                  idle_timeout: 0s
                request_timeout: 0s
                http_protocol_options:
                  accept_http_10: true
                  enable_trailers: true

                normalize_path: true
                merge_slashes: true
                path_with_escaped_slashes_action: UNESCAPE_AND_REDIRECT

  clusters:
    - name: chat_cluster
      connect_timeout: 5s
      type: LOGICAL_DNS
      dns_lookup_family: AUTO
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: chat_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: chat.process.dogeai-agent.internal
                      port_value: 3001
      health_checks:
        - timeout: 5s
          interval: 15s
          unhealthy_threshold: 5
          healthy_threshold: 1
          http_health_check:
            path: '/api/health'
            host: 'chat.process.dogeai-agent.internal:3001'
            request_headers_to_add:
              - header:
                  key: 'X-Health-Check'
                  value: 'envoy'
          event_logger:
            name: envoy.health_check.event_sinks.file
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.health_check.event_sinks.file.v3.HealthCheckEventFileSink
              event_log_path: /dev/stdout

    - name: agent_cluster
      connect_timeout: 5s
      type: LOGICAL_DNS
      dns_lookup_family: AUTO
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: agent_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: agent.process.dogeai-agent.internal
                      port_value: 3000
      health_checks:
        - timeout: 5s
          interval: 15s
          unhealthy_threshold: 5
          healthy_threshold: 1
          http_health_check:
            path: '/api/health'
            host: 'agent.process.dogeai-agent.internal:3000'
            request_headers_to_add:
              - header:
                  key: 'X-Health-Check'
                  value: 'envoy'
          event_logger:
            name: envoy.health_check.event_sinks.file
            typed_config:
              '@type': type.googleapis.com/envoy.extensions.health_check.event_sinks.file.v3.HealthCheckEventFileSink
              event_log_path: /dev/stdout

    - name: jwks_cluster
      connect_timeout: 5s
      type: LOGICAL_DNS
      dns_lookup_family: AUTO
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: jwks_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 'auth.privy.io'
                      port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          '@type': type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: 'auth.privy.io'
